name: Build & Push Multi-Arch Distroless Image

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  IMAGE_TAG: ${{ github.repository }}
  REGISTRY: gersontpc
  PLATFORMS: amd64,arm64
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     shell: bash
    #     working-directory: frameworks

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: main

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set HASH_IMAGE with SHA
        run: |
          echo "HASH_IMAGE=$(echo $GITHUB_SHA | cut -c1-7)" >> "$GITHUB_ENV"

      - name: Set HASH_IMAGE Output
        id: set_tag
        run: echo "image_tag=$HASH_IMAGE" >> $GITHUB_OUTPUT

      - name: Build image tarballs for each platform
        run: |
          # Listar os arquivos no diretório frameworks e remover as extensões
          for FRAMEWORK_FILE in ./frameworks/*.yaml; do
            FRAMEWORK=$(basename "$FRAMEWORK_FILE" .yaml)
            echo "Processando framework: $FRAMEWORK"

            # Gerar imagens para cada arquitetura
            for ARCH in "${PLATFORMS[@]}"; do
              echo "Gerando imagem para $FRAMEWORK na arquitetura $ARCH"
              apko build --arch "$ARCH" "$FRAMEWORK_FILE" "${REGISTRY}/${FRAMEWORK}" "${FRAMEWORK}-${ARCH}.tar"
              docker load < "${FRAMEWORK}-${ARCH}.tar"
            done

            # Criar a lista de manifestos
            echo "Criando a lista de manifestos para o framework: $FRAMEWORK gerar a imagem multi-arquitetura"
            docker manifest create "${REGISTRY}/${FRAMEWORK}-multiarch:${{ env.HASH_IMAGE }}" \
              "${REGISTRY}/${FRAMEWORK}:latest-arm64" \
              "${REGISTRY}/${FRAMEWORK}:latest-amd64"

            # Anotar as arquiteturas no manifesto
            echo "Anotando arquiteturas no manifesto para $FRAMEWORK"
            for ARCH in "${PLATFORMS[@]}"; do
              docker manifest annotate "${REGISTRY}/${FRAMEWORK}-multiarch:latest" \
                "${REGISTRY}/${FRAMEWORK}:latest-${ARCH}" --os linux --arch "$ARCH"
            done

            # Fazer o push da imagem multi-arquitetura
            echo "Fazendo o push da imagem multi-arquitetura para $FRAMEWORK"
            docker manifest push "${REGISTRY}/${FRAMEWORK}-multiarch:${{ env.HASH_IMAGE }}"
          done
        working-directory: main

      # - name: Inspect manifest
      #   run: docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:latest

      # - name: Scan image
      #   uses: anchore/scan-action@v6
      #   with:
      #     image: ${{ env.IMAGE_NAME }}:${{ github.sha }}
