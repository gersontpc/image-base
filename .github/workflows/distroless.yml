name: Build & Push Multi-Arch Distroless Image

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  IMAGE_NAME: ${{ github.repository }}
  APKO_IMAGE_NAME: wolfi-app
  APKO_BASE: base.yaml
  PLATFORMS: amd64,arm64
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: frameworks

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: main

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Install apko
        run: |
          curl -sSL https://apk.observiq.dev/install.sh | sh
          apko version

      - name: Build image tarballs for each platform
        run: |
          mkdir -p out
          for FILE in frameworks/*; do
            FILE_NAME=$(basename "$FILE" .yaml)
            IFS=',' read -ra ARCHS <<< "${{ env.PLATFORMS }}"
            for ARCH in "${ARCHS[@]}"; do
              apko build \
                "$FILE" \
                "${FILE_NAME}-${ARCH}" \
                "out/${FILE_NAME}-${ARCH}.tar"
            done
          done

      - name: Load Docker images for each platform
        run: |
          for FILE in frameworks/*; do
            FILE_NAME=$(basename "$FILE" .yaml)
            IFS=',' read -ra ARCHS <<< "${{ env.PLATFORMS }}"
            for ARCH in "${ARCHS[@]}"; do
              docker load < "out/${FILE_NAME}-${ARCH}.tar"
            done
          done

      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create multi-arch Docker images
        run: |
          GIT_COMMIT_HASH=$(echo "${{ github.sha }}" | cut -c1-7) # Pega os 7 primeiros caracteres do hash do commit
          for FILE in frameworks/*; do
            FILE_NAME=$(basename "$FILE" .yaml)
            IMAGE_TAG="${FILE_NAME}:multiarch-${GIT_COMMIT_HASH}"
            IFS=',' read -ra ARCHS <<< "${{ env.PLATFORMS }}"
            IMAGE_ARGS=""
            for ARCH in "${ARCHS[@]}"; do
              IMAGE_ARGS+="out/${FILE_NAME}-${ARCH}.tar "
            done
            docker buildx imagetools create \
              --tag "gersontpc/${IMAGE_TAG}" \
              $IMAGE_ARGS
          done

      - name: Inspect manifest
        run: docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:latest

      - name: Scan image
        uses: anchore/scan-action@v6
        with:
          image: ${{ env.IMAGE_NAME }}:${{ github.sha }}
